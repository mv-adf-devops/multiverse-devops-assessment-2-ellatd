name: Multiverse CI/CD Workflow #name it will appear as in our GUI interface

on:
  push:
  pull_request:
    types: [approved, opened, edited, reopened]
  workflow_dispatch:

#^ will run on a push request (when we push to the repository), 
#any of the listed types of pull requests, 
#or a workflow dispatch (dispatching the workflow manually - i.e. run this thing when we press a button

jobs: #specifies the jobs we want to run
  pytest: #gives it one job called pytest
    name: Test the Survey Application #again gives it a name that will appear in the GUI
    runs-on: ubuntu-latest #specifies the OS the 'container' created by GitHub actions will run on
    steps:
    - name: Checkout the repository #always need to do this whenever we run anything
      uses: actions/checkout@v4 #see github.com/actions to check latest version of checkout
    - name: Set up Python # installs python
      uses: actions/setup-python@v4 #again see webpage for latest version (search 'setup-python' in repositories bar)
      with:
        python-version: '3.x' #and again for latest version of python
    - name: Update pip
      run: python -m pip install --upgrade pip #run puts it straight into the cmd line and runs it for us
    - name: Install Pytest
      run: pip install pytest pytest-cov
    - name: Run Pytest
      run: pytest
      working-directory: . # dot to signal which directory we're working in (which is the one we're already in)

  terraform:
    name: Run Terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform-iac
    permissions:
      contents: write
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
    - name: Initialise Terraform
      run: terraform init
    - name: Plan changes
      run: terraform plan
      - name: Apply changes
      run: terraform apply -auto-approve
      if: |
        github.ref_name == 'main' &&
        github.event_name != 'pull_request'
    - name: Commit the Terraform state file
      uses: EndBug/add-and-commit@v9
      if: |
        github.ref_name == 'main' &&
        github.event_name != 'pull_request'
      with:
        add: '*.tfstate*'
        cwd: './terraform-iac'
        message: 'Adding the up-to-date Terraform state file'